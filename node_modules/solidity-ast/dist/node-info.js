"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodeInfoResolver = void 0;
const util = require('util');
class NodeInfoResolver {
    constructor(output) {
        this.output = output;
        this.fastNodeLookup = new Map();
        this.finder = require('../finder.json');
        for (const source in this.output.sources) {
            const sUnit = this.output.sources[source].ast;
            this.addProps(sUnit.absolutePath, undefined, sUnit);
        }
    }
    // grab a node id
    getNodeInfo(id) {
        return this.fastNodeLookup.get(id);
    }
    addProps(path, scopeNode, node) {
        var _a;
        const nodeKeys = (_a = this.finder.ArrayTypeName[node.nodeType]) !== null && _a !== void 0 ? _a : [];
        this.fastNodeLookup.set(node.id, {
            path: path,
            scopeNode: scopeNode,
            node: node,
        });
        // console.log(util.inspect(nodeKeys, { showHidden: false, depth: null, colors: true }));
        nodeKeys.forEach((key) => {
            if (key in node) {
                const childNode = node[key];
                const member = Array.isArray(childNode) ? childNode : [childNode];
                for (const item of member) {
                    if (item && ('id' in item) && ('src' in item)) {
                        this.addProps(path, node, item);
                    }
                }
            }
        });
    }
}
exports.NodeInfoResolver = NodeInfoResolver;
//# sourceMappingURL=node-info.js.map